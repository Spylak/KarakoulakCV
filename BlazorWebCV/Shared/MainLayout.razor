@using BlazorWebCV.Models
@inherits LayoutComponentBase
@implements IBrowserViewportObserver
@implements IAsyncDisposable

<MudThemeProvider IsDarkMode="AppState.Theme == AppConstants.DarkTheme" 
                  Theme="_theme"/>
<MudDialogProvider/>
<MudPopoverProvider />
<MudSnackbarProvider/>
<CascadingValue Value="AppState.CurrentBreakPoint" Name="Breakpoint">
    <MudLayout>
        <MudAppBar Elevation="1" Dense="false">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => AppState.ToggleLeftNavMenu())"/>
            <MudFab Size="Size.Small" OnClick="@((e) => AppState.ToggleTheme())"
                    StartIcon="@Icons.Material.Filled.WbSunny"
                    IconColor="AppState.ButtonColor"
                    Style="background-color: rgb(128,128,128)">
            </MudFab>
            <MudSpacer/>
                <MudTooltip Text="Home" Placement="Placement.Bottom">
                    <MudIconButton
                        OnClick="@(() => ListItemClicked(""))"
                        Icon="@Icons.Material.Filled.Home"
                        Style="@IsActive("")"
                        Color="Color.Inherit"/>
                </MudTooltip>
                <MudTooltip Text="Certifications" Placement="Placement.Bottom">
                    <MudIconButton
                        OnClick="@(() => ListItemClicked(SectionModel.Certifications))"
                        Icon="@Icons.Material.Filled.Task"
                        Style="@IsActive(SectionModel.Certifications)"
                        Color="Color.Inherit"/>
                </MudTooltip>
                <MudTooltip Text="Interests" Placement="Placement.Bottom">
                    <MudIconButton
                        OnClick="@(() => ListItemClicked(SectionModel.Interests))"
                        Icon="@Icons.Material.Filled.Interests"
                        Style="@IsActive(SectionModel.Interests)"
                        Color="Color.Inherit"/>
                </MudTooltip>
            <MudSpacer/>
            @if (AppState.CurrentPage.Equals(""))
            {
                <MudIconButton Icon="@(AppState.RightNavMenuOpened ? Icons.Material.Filled.PinInvoke : Icons.Material.Filled.PinEnd)"
                               Color="Color.Inherit"
                               Edge="Edge.Start"
                               OnClick="@((e) => AppState.ToggleRightNavMenu())"/>
            }
        </MudAppBar>

        <MudDrawer @bind-Open="AppState.LeftNavMenuOpened"
                   ClipMode="DrawerClipMode.Always"
                   Variant="DrawerVariant.Responsive"
                   Elevation="2"
                   Style="max-width: 100%">
            <LeftNavMenu CurrentBreakPoint="AppState.CurrentBreakPoint"/>
        </MudDrawer>
        @if (AppState.CurrentPage.Equals(""))
        {
            <MudDrawer @bind-Open="AppState.RightNavMenuOpened"
                       ClipMode="DrawerClipMode.Always"
                       Fixed="true"
                       OpenMiniOnHover="false"
                       Anchor="Anchor.Right"
                       Variant="DrawerVariant.Mini" Elevation="2">
                <RightNavMenu/>
            </MudDrawer>
        }
        <MudMainContent Style="overflow: hidden">
            <Chat/>
            @Body
            <MudScrollToTop
                Style="position: fixed;bottom: 5vh;z-index: 999999"
                UserAttributes="@(new Dictionary<string, object>() { { "title", "Scroll to top." } })">
                <MudFab
                    Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowCircleUp"/>
            </MudScrollToTop>
        </MudMainContent>
    </MudLayout>
</CascadingValue>

<style>
    .mud-toolbar{
        padding-right: 0;
    }
    
    .mud-input.mud-input-outlined:focus-within .mud-input-outlined-border {
        border-width: 2px;
        border-color: @(AppState.ButtonColor == Color.Dark ? "white" : "greenyellow");
    }
    
    .mud-tabs-toolbar {
        position: relative;
        background-color: transparent;
    }
    
    .mud-tab.mud-tab-active {
        color: inherit;
    }
    
    .appBackgroundColor {
        background-color: @AppState.BackgroundColor;
    }
    
</style>